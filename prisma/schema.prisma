generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String
  nom       String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Managing  used tokens
model UsedToken {
  id    Int    @id @default(autoincrement())
  token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TypeProfessionnel {
  id   Int    @id @default(autoincrement())
  type String

  type_pro Professionnel[]
}

model Quartier {
  id       Int    @id @default(autoincrement())
  quartier String

  Professionnel Professionnel[]
  Utilisateur   Utilisateur[]
}

model Utilisateur {
  id       Int    @id @default(autoincrement())
  nom      String
  mail     String
  password String
  quartier Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Quartier Quartier @relation(fields: [quartier], references: [id])
  Achat    Achat[]
}

model Professionnel {
  id        Int    @id @default(autoincrement())
  nom       String
  mail      String
  telephone String
  quartier  Int
  type_pro  Int
  image     String
  url       String

  Quartier          Quartier          @relation(fields: [quartier], references: [id])
  TypeProfessionnel TypeProfessionnel @relation(fields: [type_pro], references: [id])
}

model Fournisseur {
  id        Int    @id @default(autoincrement())
  nom       String
  telephone String
  quartier  Int
  image     String
  url       String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TypeModule {
  id    Int    @id @default(autoincrement())
  type  String
  image String
  url   String

  type_module Module[]
}

model Module {
  id        Int    @id @default(autoincrement())
  nom       String
  type      Int
  prix      Int
  reference String

  TypeModule TypeModule @relation(fields: [type], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Achat      Achat[]
}

model Achat {
  id          Int @id @default(autoincrement())
  utilisateur Int
  module      Int

  Utilisateur Utilisateur @relation(fields: [utilisateur], references: [id])
  Module      Module      @relation(fields: [module], references: [id])
  payedAt     DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// -----------------------------------------Consomation-------------------------------------
model Consomation {
  id                Int      @id @default(autoincrement())
  valeur            String
  total             Float
  date_consommation DateTime @default(now())
}

model Stats {
  id          Int @id @default(autoincrement())
  percentage  Float
  date        DateTime @default(now())  
}

// ----------------------------------------Notifications------------------------------------

model Notifications {
  id         Int      @id @default(autoincrement())
  subject    String
  titre      String
  created_at DateTime @default(now())
}

//-----------------------------------------Assistance-----------------------------------------

model Assistance {
  id          Int      @id @default(autoincrement())
  titre       String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
